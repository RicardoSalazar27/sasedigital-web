{"version":3,"sources":["producto.js","contacto.js","inicio.js"],"names":["formulario","document","getElementById","notaDeEstado","campos","nombre","querySelector","correo","telefono","empresa","interes","mensaje","consentimiento","trampa","expresionCorreo","mostrarError","elemento","grupo","closest","classList","add","setAttribute","error","createElement","className","hidden","appendChild","asegurarNodoDeError","textContent","limpiarError","remove","removeAttribute","addEventListener","evento","target","value","trim","length","test","checked","async","preventDefault","reset","correcto","valorCorreo","validarFormulario","primerInvalido","focus","datosFormulario","FormData","set","opcionSeleccionada","options","selectedIndex","text","window","location","href","parametros","URLSearchParams","clave","valor","entries","append","String","botonEnviar","htmlOriginalDelBoton","innerHTML","disabled","respuesta","fetch","method","headers","Accept","Content-Type","body","toString","credentials","ok","Error","status","datos","json","_","message","pathname","querySelectorAll","forEach","a","e","id","getAttribute","el","scrollIntoView","behavior","navToggle","navLinks","expanded","toggle","dropdown","btn","stopPropagation","open","dd","contains","canvas","ctx","getContext","width","innerWidth","height","innerHeight","colors","particles","i","push","x","Math","random","y","vx","vy","radius","color","floor","alpha","delta","animate","clearRect","p","beginPath","arc","PI","fillStyle","hex","bigint","parseInt","replace","hexToRgb","fill","j","dx","dy","dist","hypot","moveTo","lineTo","strokeStyle","lineWidth","stroke","requestAnimationFrame","nav","media","matchMedia","setOpen","matches","b","currentTarget","parentElement","key","prefiereReducir","prepararAnimaciones","heroTexto","style","setProperty","cta","observarYRevelar","observador","IntersectionObserver","entradas","ent","isIntersecting","unobserve","rootMargin","threshold","observe","parallaxHero","rafId","actualizar","scrollY","pageYOffset","t","max","min","passive"],"mappings":"AAAA,GCAA,WACA,MAAAA,EAAAC,SAAAC,eAAA,gBACA,IAAAF,EAAA,OAEA,MAAAG,EAAAF,SAAAC,eAAA,aAEAE,EAAA,CACAC,OAAAL,EAAAM,cAAA,WACAC,OAAAP,EAAAM,cAAA,YACAE,SAAAR,EAAAM,cAAA,YACAG,QAAAT,EAAAM,cAAA,cACAI,QAAAV,EAAAM,cAAA,cACAK,QAAAX,EAAAM,cAAA,cACAM,eAAAZ,EAAAM,cAAA,iBACAO,OAAAb,EAAAM,cAAA,0BAGAQ,EAAA,iCAgBA,SAAAC,EAAAC,EAAAL,GACA,MAAAM,EAAAD,EAAAE,QAAA,iBAAAF,EAAAE,QAAA,UACA,IAAAD,EAAA,OACAA,EAAAE,UAAAC,IAAA,cACAJ,EAAAK,aAAA,eAAA,QACA,MAAAC,EAlBA,SAAAN,GACA,MAAAC,EAAAD,EAAAE,QAAA,iBAAAF,EAAAE,QAAA,UACA,IAAAD,EAAA,OAAA,KACA,IAAAK,EAAAL,EAAAX,cAAA,gBAOA,OANAgB,IACAA,EAAArB,SAAAsB,cAAA,SACAD,EAAAE,UAAA,cACAF,EAAAG,QAAA,EACAR,EAAAS,YAAAJ,IAEAA,EAQAK,CAAAX,GACAM,IAAAA,EAAAM,YAAAjB,EAAAW,EAAAG,QAAA,GAGA,SAAAI,EAAAb,GACA,MAAAC,EAAAD,EAAAE,QAAA,iBAAAF,EAAAE,QAAA,UACA,IAAAD,EAAA,OACAA,EAAAE,UAAAW,OAAA,cACAd,EAAAe,gBAAA,gBACA,MAAAT,EAAAL,EAAAX,cAAA,gBACAgB,IAAAA,EAAAG,QAAA,GAwCAzB,EAAAgC,iBAAA,SAAA,SAAAC,GACA,MAAAjB,EAAAiB,EAAAC,OACA,OAAAlB,IAAAZ,EAAAC,OACAW,EAAAmB,MAAAC,OAAAC,QAAA,EACAR,EAAAb,GACAD,EAAAC,EAAA,4CAEAA,IAAAZ,EAAAG,OACAO,EAAAwB,KAAAtB,EAAAmB,MAAAC,QACAP,EAAAb,GACAD,EAAAC,EAAA,oBAEAA,IAAAZ,EAAAO,QACAK,EAAAmB,MAAAC,OAAAC,QAAA,GACAR,EAAAb,GACAD,EAAAC,EAAA,yBAEAA,IAAAZ,EAAAM,QACA,MAAAM,EAAAmB,MACAN,EAAAb,GACAD,EAAAC,EAAA,+BAHA,KAOAhB,EAAAgC,iBAAA,UAAA,SAAAC,GACAA,EAAAC,SAAA9B,EAAAQ,iBACAR,EAAAQ,eAAA2B,QACAV,EAAAzB,EAAAQ,gBACAG,EAAAX,EAAAQ,eAAA,kCAKAZ,EAAAgC,iBAAA,UAAAQ,eAAAP,GAIA,GAHAA,EAAAQ,iBAGArC,EAAAS,QAAAT,EAAAS,OAAAsB,MAGA,OAFAnC,EAAA0C,aACAvC,IAAAA,EAAAsB,QAAA,EAAAtB,EAAAyB,YAAA,aAIA,IA/EA,WACA,IAAAe,GAAA,EAGAvC,EAAAC,OAAA8B,MAAAC,OACAC,QAAA,EAAAR,EAAAzB,EAAAC,SACAsC,GAAA,EAAA5B,EAAAX,EAAAC,OAAA,6CAGA,MAAAuC,EAAAxC,EAAAG,OAAA4B,MAAAC,OAuBA,OAtBAtB,EAAAwB,KAAAM,GAAAf,EAAAzB,EAAAG,SACAoC,GAAA,EAAA5B,EAAAX,EAAAG,OAAA,8BAGAH,EAAAO,QAAAwB,MAAAC,OACAC,QAAA,GAAAR,EAAAzB,EAAAO,UACAgC,GAAA,EAAA5B,EAAAX,EAAAO,QAAA,+CAGAP,EAAAM,UACA,MAAAN,EAAAM,QAAAyB,MAAAN,EAAAzB,EAAAM,UACAiC,GAAA,EAAA5B,EAAAX,EAAAM,QAAA,4BAIAN,EAAAQ,gBAAAR,EAAAQ,eAAA2B,QACAV,EAAAzB,EAAAQ,iBAEA+B,GAAA,EACA5B,EAAAX,EAAAQ,eAAA,+BAGA+B,EA+CAE,GAAA,CACA,MAAAC,EAAA9C,EAAAM,cAAA,+DAEA,YADAwC,GAAAA,EAAAC,SAKA,MAAAC,EAAA,IAAAC,SAAAjD,GASA,GANAgD,EAAAE,IAAA,OAAA9C,EAAAC,OAAA8B,MAAAC,QACAY,EAAAE,IAAA,QAAA9C,EAAAG,OAAA4B,MAAAC,QACAY,EAAAE,IAAA,UAAA9C,EAAAO,QAAAwB,MAAAC,QACAY,EAAAE,IAAA,QAAA9C,EAAAI,SAAA2B,MAAAC,QACAY,EAAAE,IAAA,UAAA9C,EAAAK,QAAA0B,MAAAC,QAEAhC,EAAAM,QAAA,CACA,MAAAyC,EAAA/C,EAAAM,QAAA0C,QAAAhD,EAAAM,QAAA2C,eACAL,EAAAE,IAAA,aAAA9C,EAAAM,QAAAyB,OACAa,EAAAE,IAAA,eAAAC,EAAAA,EAAAG,KAAA,IAGAN,EAAAE,IAAA,UAAA9C,EAAAQ,eAAA2B,QAAA,IAAA,KACAS,EAAAE,IAAA,WAAAK,OAAAC,SAAAC,MAGA,MAAAC,EAAA,IAAAC,gBACA,IAAA,MAAAC,EAAAC,KAAAb,EAAAc,UACAJ,EAAAK,OAAAH,EAAAI,OAAAH,IAGA,MAAAI,EAAAjE,EAAAM,cAAA,yBACA4D,EAAAD,EAAAA,EAAAE,UAAA,GAEAF,IACAA,EAAAG,UAAA,EACAH,EAAAE,UAAA,yDAGA,IACA,MAAAE,QAAAC,MAAA,gBAAA,CACAC,OAAA,OACAC,QAAA,CACAC,OAAA,mBACAC,eAAA,oDAEAC,KAAAjB,EAAAkB,WACAC,YAAA,gBAGA,IAAAR,EAAAS,GAAA,MAAA,IAAAC,MAAA,cAAAV,EAAAW,QAEA,IAAAC,EAAA,KACA,IAAAA,QAAAZ,EAAAa,OAAA,MAAAC,IAEAnF,EAAA0C,QACAvC,IACAA,EAAAsB,QAAA,EACAtB,EAAAyB,YAAAqD,GAAAA,EAAAG,QAAAH,EAAAG,QAAA,kCAEA,MAAA9D,GACAnB,IACAA,EAAAsB,QAAA,EACAtB,EAAAyB,YAAA,qEAEA,QACAqC,IACAA,EAAAG,UAAA,EACAH,EAAAE,UAAAD,OAvMA,GCAA,MAGA,GADA,MAAAX,OAAAC,SAAA6B,SACA,OAGApF,SAAAqF,iBAAA,gBAAAC,QAAAC,IACAA,EAAAxD,iBAAA,QAAAyD,IACA,MAAAC,EAAAF,EAAAG,aAAA,QACA,IAAAD,GAAA,MAAAA,EAAA,OACA,MAAAE,EAAA3F,SAAAK,cAAAoF,GACAE,IACAH,EAAAhD,iBACAmD,EAAAC,eAAA,CAAAC,SAAA,gBAIA,MAAAC,EAAA9F,SAAAC,eAAA,aACA8F,EAAA/F,SAAAC,eAAA,YACA6F,GAAAC,GACAD,EAAA/D,iBAAA,QAAA,KACA,MAAAiE,EAAA,SAAAF,EAAAJ,aAAA,iBACAI,EAAA1E,aAAA,gBAAA2C,QAAAiC,IACAD,EAAA7E,UAAA+E,OAAA,oBACAF,EAAA3E,aAAA,cAAA2C,OAAAiC,MAUAhG,SAAAqF,iBAAA,kBAAAC,QAAAY,IACA,MAAAC,EAAAD,EAAA7F,cAAA,aACA8F,GAEAA,EAAApE,iBAAA,QAAAyD,IACAA,EAAAY,kBACA,MAAAC,EAAA,SAAAH,EAAAR,aAAA,iBACAQ,EAAA9E,aAAA,gBAAA2C,QAAAsC,QAKArG,SAAA+B,iBAAA,QAAAyD,IACAxF,SAAAqF,iBAAA,wCAAAC,QAAAgB,IACAA,EAAAC,SAAAf,EAAAvD,SAAAqE,EAAAlF,aAAA,gBAAA,aAKA,MAAAoF,EAAAxG,SAAAC,eAAA,eACA,IAAAuG,EAAA,OAEA,MAAAC,EAAAD,EAAAE,WAAA,MACA,IAAAC,EAAAH,EAAAG,MAAArD,OAAAsD,WACAC,EAAAL,EAAAK,OAAAvD,OAAAwD,YAEA,MAAAC,EAAA,CAAA,UAAA,UAAA,UAAA,WACAC,EAAA,GAIA,IAAA,IAAAC,EAAA,EAAAA,EAHA,IAGAA,IACAD,EAAAE,KAAA,CACAC,EAAAC,KAAAC,SAAAV,EACAW,EAAAF,KAAAC,SAAAR,EACAU,GAAA,IAAAH,KAAAC,SAAA,IACAG,GAAA,IAAAJ,KAAAC,SAAA,IACAI,OAAA,EAAAL,KAAAC,SAAA,EACAK,MAAAX,EAAAK,KAAAO,MAAAP,KAAAC,SAAAN,EAAA3E,SACAwF,MAAAR,KAAAC,SACAQ,MAAA,IAAAT,KAAAC,YAUA,SAAAS,IACArB,EAAAsB,UAAA,EAAA,EAAApB,EAAAE,GAEAG,EAAA1B,QAAA0C,IACAA,EAAAb,GAAAa,EAAAT,GAAAS,EAAAV,GAAAU,EAAAR,IACAQ,EAAAb,EAAA,GAAAa,EAAAb,EAAAR,KAAAqB,EAAAT,KAAA,IACAS,EAAAV,EAAA,GAAAU,EAAAV,EAAAT,KAAAmB,EAAAR,KAAA,GAEAQ,EAAAJ,OAAAI,EAAAH,OACAG,EAAAJ,OAAA,GAAAI,EAAAJ,OAAA,KAAAI,EAAAH,QAAA,GAEApB,EAAAwB,YACAxB,EAAAyB,IAAAF,EAAAb,EAAAa,EAAAV,EAAAU,EAAAP,OAAA,EAAA,EAAAL,KAAAe,IACA1B,EAAA2B,UAAA,QAnBA,SAAAC,GACA,MAAAC,EAAAC,SAAAF,EAAAG,QAAA,IAAA,IAAA,IAEA,MAAA,GADAF,GAAA,GAAA,OAAAA,GAAA,EAAA,OAAA,IAAAA,IAiBAG,CAAAT,EAAAN,UAAAM,EAAAJ,SACAnB,EAAAiC,SAGA,IAAA,IAAAzB,EAAA,EAAAA,EAvCA,IAuCAA,IACA,IAAA,IAAA0B,EAAA1B,EAAA,EAAA0B,EAxCA,IAwCAA,IAAA,CACA,MAAAC,EAAA5B,EAAAC,GAAAE,EAAAH,EAAA2B,GAAAxB,EACA0B,EAAA7B,EAAAC,GAAAK,EAAAN,EAAA2B,GAAArB,EACAwB,EAAA1B,KAAA2B,MAAAH,EAAAC,GACA,GAAAC,EA3CA,IA2CA,CACArC,EAAAwB,YACAxB,EAAAuC,OAAAhC,EAAAC,GAAAE,EAAAH,EAAAC,GAAAK,GACAb,EAAAwC,OAAAjC,EAAA2B,GAAAxB,EAAAH,EAAA2B,GAAArB,GACA,MAAAM,EAAA,IAAA,EAAAkB,EA/CA,KAgDArC,EAAAyC,YAAA,kBAAAtB,KACAnB,EAAA0C,UAAA,GACA1C,EAAA2C,UAKAC,sBAAAvB,GAEAA,GAEAxE,OAAAvB,iBAAA,SAAA,KACA4E,EAAAH,EAAAG,MAAArD,OAAAsD,WACAC,EAAAL,EAAAK,OAAAvD,OAAAwD,cAGA,MAAAwC,EAAAtJ,SAAAC,eAAA,YACAkG,EAAAnG,SAAAC,eAAA,aACAsJ,EAAAjG,OAAAkG,WAAA,sBAEA,SAAAC,EAAApD,GACAiD,EAAApI,UAAA+E,OAAA,UAAAI,GACAF,EAAA/E,aAAA,gBAAA2C,OAAAsC,IACAiD,EAAAlI,aAAA,cAAA2C,QAAAsC,IACArG,SAAA0E,KAAAxD,UAAA+E,OAAA,YAAAI,GAGAF,EAAApE,iBAAA,QAAA,IAAA0H,GAAAH,EAAApI,UAAAqF,SAAA,aAGA+C,EAAAjE,iBAAA,eAAAC,QAAAC,IACAA,EAAAxD,iBAAA,QAAA,KAAAwH,EAAAG,SAAAD,GAAA,OAIAH,EAAAjE,iBAAA,8BAAAC,QAAAqE,IACAA,EAAA5H,iBAAA,QAAAyD,IACA,MAAAc,EAAAd,EAAAoE,cAAA3I,QAAA,kBACAoF,EAAA,SAAAC,EAAAZ,aAAA,iBAEAY,EAAAuD,cAAAxE,iBAAA,kBAAAC,QAAA6B,GAAAA,EAAA/F,aAAA,gBAAA,UACAkF,EAAAlF,aAAA,gBAAA2C,QAAAsC,QAKArG,SAAA+B,iBAAA,UAAAyD,IAAA,WAAAA,EAAAsE,KAAAL,GAAA,KAGAF,EAAAxH,iBAAA,SAAA,KAAAwH,EAAAG,SAAAD,GAAA,MAhKA,GFAA,eAAAnG,OAAAC,SAAA6B,SAAA,CAEA,MAAA2E,EAAAzG,OAAAkG,WAAA,oCAAAE,QAGA,SAAAM,sBAEA,MAAAC,EAAAjK,SAAAK,cAAA,0BACA4J,IACAA,EAAA/I,UAAAC,IAAA,WAAA,gBACA8I,EAAAC,MAAAC,YAAA,iBAAA,SAIAnK,SAAAqF,iBAAA,0BAAAC,QAAA,CAAAK,EAAAsB,KACAtB,EAAAzE,UAAAC,IAAA,WAAA,gBACAwE,EAAAuE,MAAAC,YAAA,MAAAlD,KAIAjH,SAAAqF,iBAAA,yBAAAC,QAAA,CAAAK,EAAAsB,KACAtB,EAAAzE,UAAAC,IAAA,WAAA,gBACAwE,EAAAuE,MAAAC,YAAA,MAAAlD,KAIAjH,SAAAqF,iBAAA,wBAAAC,QAAA,CAAAK,EAAAsB,KACAtB,EAAAzE,UAAAC,IAAA,WAAA,gBACAwE,EAAAuE,MAAAC,YAAA,MAAAlD,KAIAjH,SAAAqF,iBAAA,uBAAAC,QAAA,CAAAK,EAAAsB,KACAtB,EAAAzE,UAAAC,IAAA,WAAA,gBACAwE,EAAAuE,MAAAC,YAAA,MAAAlD,KAIA,MAAAmD,EAAApK,SAAAK,cAAA,yBACA+J,IACAA,EAAAlJ,UAAAC,IAAA,WAAA,gBACAiJ,EAAAF,MAAAC,YAAA,iBAAA,UAIA,SAAAE,mBACA,GAAAN,KAAA,yBAAAzG,QAGA,YADAtD,SAAAqF,iBAAA,aAAAC,QAAAK,GAAAA,EAAAzE,UAAAC,IAAA,iBAIA,MAAAmJ,EAAA,IAAAC,qBAAAC,IACA,IAAA,MAAAC,KAAAD,EACAC,EAAAC,iBACAD,EAAAxI,OAAAf,UAAAC,IAAA,gBACAmJ,EAAAK,UAAAF,EAAAxI,UAGA,CAAA2I,WAAA,mBAAAC,UAAA,KAEA7K,SAAAqF,iBAAA,aAAAC,QAAAK,GAAA2E,EAAAQ,QAAAnF,IAIA,SAAAoF,eACA,GAAAhB,EAAA,OACA,MAAAR,EAAAvJ,SAAAK,cAAA,qBACA,IAAAkJ,EAAA,OAEA,IAAAyB,EAAA,KAGA,SAAAC,IACAD,EAAA,KACA,MAAA1D,EAAAhE,OAAA4H,SAAA5H,OAAA6H,aAAA,EACAC,EAAAhE,KAAAiE,IAAA,EAAAjE,KAAAkE,IALA,IAKAhE,IAEAiC,EAAAW,MAAAC,YAAA,aAAA,IAAAiB,EAAA,MAGA9H,OAAAvB,iBAAA,SAAA,KACAiJ,IACAA,EAAA3B,sBAAA4B,KACA,CAAAM,SAAA,IAGAN,IAIAjB,sBACAK,mBAGA/G,OAAAvB,iBAAA,OAAA,KACA/B,SAAAqF,iBAAA,6CACAC,QAAAK,GAAAA,EAAAzE,UAAAC,IAAA,mBAGA4J","file":"bundle.js","sourcesContent":["if(window.location.pathname === '/productos'){\n\n  const prefiereReducir = window.matchMedia('(prefers-reduced-motion: reduce)').matches;\n\n  // Marca elementos para animar (sin tocar tu HTML original)\n  function prepararAnimaciones(){\n    // Hero (texto)\n    const heroTexto = document.querySelector('.prod__hero .container');\n    if (heroTexto){\n      heroTexto.classList.add('animable','anim--arriba');\n      heroTexto.style.setProperty('--anim-retardo','80ms');\n    }\n\n    // Beneficios (stagger)\n    document.querySelectorAll('.prod__bullets .bullet').forEach((el, i) => {\n      el.classList.add('animable','anim--arriba');\n      el.style.setProperty('--i', i);\n    });\n\n    // Módulos (stagger)\n    document.querySelectorAll('.prod__features .card').forEach((el, i) => {\n      el.classList.add('animable','anim--escala');\n      el.style.setProperty('--i', i);\n    });\n\n    // Flujo (stagger)\n    document.querySelectorAll('.prod__flow .flow li').forEach((el, i) => {\n      el.classList.add('animable','anim--arriba');\n      el.style.setProperty('--i', i);\n    });\n\n    // Galería (stagger)\n    document.querySelectorAll('.prod__gallery .gal').forEach((el, i) => {\n      el.classList.add('animable','anim--escala');\n      el.style.setProperty('--i', i);\n    });\n\n    // CTA\n    const cta = document.querySelector('.prod__cta .container');\n    if (cta){\n      cta.classList.add('animable','anim--arriba');\n      cta.style.setProperty('--anim-retardo','100ms');\n    }\n  }\n\n  function observarYRevelar(){\n    if (prefiereReducir || !('IntersectionObserver' in window)){\n      // Sin animaciones o sin soporte: todo visible\n      document.querySelectorAll('.animable').forEach(el => el.classList.add('esta-visible'));\n      return;\n    }\n\n    const observador = new IntersectionObserver((entradas) => {\n      for (const ent of entradas){\n        if (ent.isIntersecting){\n          ent.target.classList.add('esta-visible');\n          observador.unobserve(ent.target);\n        }\n      }\n    }, { rootMargin: '0px 0px -10% 0px', threshold: 0.1 });\n\n    document.querySelectorAll('.animable').forEach(el => observador.observe(el));\n  }\n\n  // Parallax sutil para la imagen del hero\n  function parallaxHero(){\n    if (prefiereReducir) return;\n    const media = document.querySelector('.prod__hero-media');\n    if (!media) return;\n\n    let rafId = null;\n    const maxDesplazamiento = 180; // px máximos a considerar\n\n    function actualizar(){\n      rafId = null;\n      const y = window.scrollY || window.pageYOffset || 0;\n      const t = Math.max(0, Math.min(maxDesplazamiento, y));\n      // 0.12 = factor sutil; súbelo si quieres más efecto\n      media.style.setProperty('--parallax', (t * 0.12) + 'px');\n    }\n\n    window.addEventListener('scroll', () => {\n      if (rafId) return;\n      rafId = requestAnimationFrame(actualizar);\n    }, { passive: true });\n\n    // inicial\n    actualizar();\n  }\n\n  // Inicialización\n  prepararAnimaciones();\n  observarYRevelar();\n\n  // Forzar mostrar el hero rápido al cargar\n  window.addEventListener('load', () => {\n    document.querySelectorAll('.prod__hero .container, .prod__hero-media')\n      .forEach(el => el.classList.add('esta-visible'));\n  });\n\n  parallaxHero();\n}","(function () {\n  const formulario = document.getElementById('contact-form');\n  if (!formulario) return;\n\n  const notaDeEstado = document.getElementById('form-note');\n\n  const campos = {\n    nombre:   formulario.querySelector('#c-name'),\n    correo:   formulario.querySelector('#c-email'),\n    telefono: formulario.querySelector('#c-phone'),\n    empresa:  formulario.querySelector('#c-company'),\n    interes:  formulario.querySelector('#c-service'),\n    mensaje:  formulario.querySelector('#c-message'),\n    consentimiento: formulario.querySelector('.check__input'),\n    trampa:   formulario.querySelector('input[name=\"_gotcha\"]') // honeypot (bots)\n  };\n\n  const expresionCorreo = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n\n  // ---------- Utilidades de error ----------\n  function asegurarNodoDeError(elemento) {\n    const grupo = elemento.closest('.form__group') || elemento.closest('.check');\n    if (!grupo) return null;\n    let error = grupo.querySelector('.form__error');\n    if (!error) {\n      error = document.createElement('small');\n      error.className = 'form__error';\n      error.hidden = true;\n      grupo.appendChild(error);\n    }\n    return error;\n  }\n\n  function mostrarError(elemento, mensaje) {\n    const grupo = elemento.closest('.form__group') || elemento.closest('.check');\n    if (!grupo) return;\n    grupo.classList.add('is-invalid');\n    elemento.setAttribute('aria-invalid', 'true');\n    const error = asegurarNodoDeError(elemento);\n    if (error) { error.textContent = mensaje; error.hidden = false; }\n  }\n\n  function limpiarError(elemento) {\n    const grupo = elemento.closest('.form__group') || elemento.closest('.check');\n    if (!grupo) return;\n    grupo.classList.remove('is-invalid');\n    elemento.removeAttribute('aria-invalid');\n    const error = grupo.querySelector('.form__error');\n    if (error) error.hidden = true;\n  }\n\n  // ---------- Validación ----------\n  function validarFormulario() {\n    let correcto = true;\n\n    // Nombre (mínimo 2 caracteres)\n    const valorNombre = campos.nombre.value.trim();\n    if (valorNombre.length >= 2) limpiarError(campos.nombre);\n    else { correcto = false; mostrarError(campos.nombre, 'Escribe tu nombre (mínimo 2 caracteres).'); }\n\n    // Correo (formato válido)\n    const valorCorreo = campos.correo.value.trim();\n    if (expresionCorreo.test(valorCorreo)) limpiarError(campos.correo);\n    else { correcto = false; mostrarError(campos.correo, 'Ingresa un correo válido.'); }\n\n    // Mensaje (mínimo 10 caracteres)\n    const valorMensaje = campos.mensaje.value.trim();\n    if (valorMensaje.length >= 10) limpiarError(campos.mensaje);\n    else { correcto = false; mostrarError(campos.mensaje, 'Escribe un mensaje (mínimo 10 caracteres).'); }\n\n    // Interés principal (no permitir la opción 0)\n    if (campos.interes) {\n      if (campos.interes.value !== '0') limpiarError(campos.interes);\n      else { correcto = false; mostrarError(campos.interes, 'Selecciona una opción.'); }\n    }\n\n    // Consentimiento (obligatorio)\n    if (campos.consentimiento && campos.consentimiento.checked) {\n      limpiarError(campos.consentimiento);\n    } else {\n      correcto = false;\n      mostrarError(campos.consentimiento, 'Debes aceptar el contacto.');\n    }\n\n    return correcto;\n  }\n\n  // Validación en tiempo real\n  formulario.addEventListener('input', function (evento) {\n    const elemento = evento.target;\n    if (elemento === campos.nombre) {\n      return (elemento.value.trim().length >= 2)\n        ? limpiarError(elemento)\n        : mostrarError(elemento, 'Escribe tu nombre (mínimo 2 caracteres).');\n    }\n    if (elemento === campos.correo) {\n      return expresionCorreo.test(elemento.value.trim())\n        ? limpiarError(elemento)\n        : mostrarError(elemento, 'Correo inválido.');\n    }\n    if (elemento === campos.mensaje) {\n      return (elemento.value.trim().length >= 10)\n        ? limpiarError(elemento)\n        : mostrarError(elemento, 'Mínimo 10 caracteres.');\n    }\n    if (elemento === campos.interes) {\n      return (elemento.value !== '0')\n        ? limpiarError(elemento)\n        : mostrarError(elemento, 'Selecciona una opción.');\n    }\n  });\n\n  formulario.addEventListener('change', function (evento) {\n    if (evento.target === campos.consentimiento) {\n      campos.consentimiento.checked\n        ? limpiarError(campos.consentimiento)\n        : mostrarError(campos.consentimiento, 'Debes aceptar el contacto.');\n    }\n  });\n\n  // ---------- Envío ----------\n  formulario.addEventListener('submit', async function (evento) {\n    evento.preventDefault();\n\n    // Honeypot: si trae algo, es bot — decimos \"gracias\" y vaciamos\n    if (campos.trampa && campos.trampa.value) {\n      formulario.reset();\n      if (notaDeEstado) { notaDeEstado.hidden = false; notaDeEstado.textContent = 'Gracias.'; }\n      return;\n    }\n\n    if (!validarFormulario()) {\n      const primerInvalido = formulario.querySelector('.is-invalid input, .is-invalid select, .is-invalid textarea');\n      if (primerInvalido) primerInvalido.focus();\n      return;\n    }\n\n    // Construir datos para PHP (application/x-www-form-urlencoded → $_POST)\n    const datosFormulario = new FormData(formulario);\n\n    // Normalizar y agregar campos útiles\n    datosFormulario.set('name', campos.nombre.value.trim());\n    datosFormulario.set('email', campos.correo.value.trim());\n    datosFormulario.set('message', campos.mensaje.value.trim());\n    datosFormulario.set('phone', campos.telefono.value.trim());\n    datosFormulario.set('company', campos.empresa.value.trim());\n\n    if (campos.interes) {\n      const opcionSeleccionada = campos.interes.options[campos.interes.selectedIndex];\n      datosFormulario.set('service_id', campos.interes.value);\n      datosFormulario.set('service_text', opcionSeleccionada ? opcionSeleccionada.text : '');\n    }\n\n    datosFormulario.set('consent', campos.consentimiento.checked ? '1' : '0');\n    datosFormulario.set('referrer', window.location.href);\n\n    // Pasar a URLSearchParams\n    const parametros = new URLSearchParams();\n    for (const [clave, valor] of datosFormulario.entries()) {\n      parametros.append(clave, String(valor));\n    }\n\n    const botonEnviar = formulario.querySelector('button[type=\"submit\"]');\n    const htmlOriginalDelBoton = botonEnviar ? botonEnviar.innerHTML : '';\n\n    if (botonEnviar) {\n      botonEnviar.disabled = true;\n      botonEnviar.innerHTML = '<i class=\"fa-solid fa-spinner fa-spin\"></i> Enviando…';\n    }\n\n    try {\n      const respuesta = await fetch('/api/contacto', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n        },\n        body: parametros.toString(),\n        credentials: 'same-origin'\n      });\n\n      if (!respuesta.ok) throw new Error('Error HTTP ' + respuesta.status);\n\n      let datos = null;\n      try { datos = await respuesta.json(); } catch (_) {}\n\n      formulario.reset();\n      if (notaDeEstado) {\n        notaDeEstado.hidden = false;\n        notaDeEstado.textContent = (datos && datos.message) ? datos.message : 'Gracias, recibimos tu mensaje.';\n      }\n    } catch (error) {\n      if (notaDeEstado) {\n        notaDeEstado.hidden = false;\n        notaDeEstado.textContent = 'No pudimos enviar tu mensaje. Inténtalo de nuevo en unos minutos.';\n      }\n    } finally {\n      if (botonEnviar) {\n        botonEnviar.disabled = false;\n        botonEnviar.innerHTML = htmlOriginalDelBoton;\n      }\n    }\n  });\n})();\n","(() => {\n  // --- Ejecutar SOLO en la ruta \"/\" ---\n  const isHome = () => window.location.pathname === '/';\n  if (!isHome()) return;\n\n  // ========== SMOOTH SCROLL ==========\n  document.querySelectorAll('a[href^=\"#\"]').forEach(a => {\n    a.addEventListener('click', e => {\n      const id = a.getAttribute('href');\n      if (!id || id === '#') return;\n      const el = document.querySelector(id);\n      if (!el) return;\n      e.preventDefault();\n      el.scrollIntoView({ behavior: 'smooth' });\n    });\n  });\n  // ========== NAV MÓVIL (BEM) ==========\n  const navToggle = document.getElementById('navToggle');      // <button class=\"nav__toggle\" id=\"navToggle\">\n  const navLinks  = document.getElementById('navLinks');       // <nav class=\"nav__links\" id=\"navLinks\">\n  if (navToggle && navLinks) {\n    navToggle.addEventListener('click', () => {\n      const expanded = navToggle.getAttribute('aria-expanded') === 'true';\n      navToggle.setAttribute('aria-expanded', String(!expanded));\n      navLinks.classList.toggle('nav__links--open');\n      navLinks.setAttribute('aria-hidden', String(expanded));\n    });\n  }\n\n  // ========== DROPDOWN (Productos) BEM ==========\n  // Estructura esperada:\n  // <div class=\"nav__dropdown\" aria-expanded=\"false\">\n  //   <button class=\"nav__btn\" ...>...</button>\n  //   <div class=\"nav__menu\" role=\"menu\">...</div>\n  // </div>\n  document.querySelectorAll('.nav__dropdown').forEach(dropdown => {\n    const btn = dropdown.querySelector('.nav__btn');\n    if (!btn) return;\n\n    btn.addEventListener('click', (e) => {\n      e.stopPropagation();\n      const open = dropdown.getAttribute('aria-expanded') === 'true';\n      dropdown.setAttribute('aria-expanded', String(!open));\n    });\n  });\n\n  // Cerrar cualquier dropdown si se hace click fuera\n  document.addEventListener('click', (e) => {\n    document.querySelectorAll('.nav__dropdown[aria-expanded=\"true\"]').forEach(dd => {\n      if (!dd.contains(e.target)) dd.setAttribute('aria-expanded', 'false');\n    });\n  });\n\n  // ========== HERO PARTICLES ==========\n  const canvas = document.getElementById('hero-canvas');\n  if (!canvas) return; // si por algo no está el hero en esta vista, no seguimos\n\n  const ctx = canvas.getContext('2d');\n  let width = (canvas.width = window.innerWidth);\n  let height = (canvas.height = window.innerHeight);\n\n  const colors = ['#2584f8', '#04ddb2', '#a4caff', '#f2f6fc'];\n  const particles = [];\n  const particleCount = 100;\n  const maxDistance = 140;\n\n  for (let i = 0; i < particleCount; i++) {\n    particles.push({\n      x: Math.random() * width,\n      y: Math.random() * height,\n      vx: (Math.random() - 0.5) * 0.7,\n      vy: (Math.random() - 0.5) * 0.7,\n      radius: Math.random() * 2 + 1,\n      color: colors[Math.floor(Math.random() * colors.length)],\n      alpha: Math.random(),\n      delta: Math.random() * 0.02\n    });\n  }\n\n  function hexToRgb(hex) {\n    const bigint = parseInt(hex.replace('#', ''), 16);\n    const r = (bigint >> 16) & 255, g = (bigint >> 8) & 255, b = bigint & 255;\n    return `${r},${g},${b}`;\n  }\n\n  function animate() {\n    ctx.clearRect(0, 0, width, height);\n\n    particles.forEach(p => {\n      p.x += p.vx; p.y += p.vy;\n      if (p.x < 0 || p.x > width) p.vx *= -1;\n      if (p.y < 0 || p.y > height) p.vy *= -1;\n\n      p.alpha += p.delta;\n      if (p.alpha <= 0 || p.alpha >= 1) p.delta *= -1;\n\n      ctx.beginPath();\n      ctx.arc(p.x, p.y, p.radius, 0, Math.PI * 2);\n      ctx.fillStyle = `rgba(${hexToRgb(p.color)},${p.alpha})`;\n      ctx.fill();\n    });\n\n    for (let i = 0; i < particleCount; i++) {\n      for (let j = i + 1; j < particleCount; j++) {\n        const dx = particles[i].x - particles[j].x;\n        const dy = particles[i].y - particles[j].y;\n        const dist = Math.hypot(dx, dy);\n        if (dist < maxDistance) {\n          ctx.beginPath();\n          ctx.moveTo(particles[i].x, particles[i].y);\n          ctx.lineTo(particles[j].x, particles[j].y);\n          const alpha = 0.5 * (1 - dist / maxDistance);\n          ctx.strokeStyle = `rgba(4,221,178,${alpha})`; // $secundario\n          ctx.lineWidth = 0.7;\n          ctx.stroke();\n        }\n      }\n    }\n\n    requestAnimationFrame(animate);\n  }\n  animate();\n\n  window.addEventListener('resize', () => {\n    width = canvas.width = window.innerWidth;\n    height = canvas.height = window.innerHeight;\n  });\n\n    const nav   = document.getElementById('navLinks');\n    const btn   = document.getElementById('navToggle');\n    const media = window.matchMedia('(min-width: 768px)');\n\n    function setOpen(open){\n      nav.classList.toggle('is-open', open);\n      btn.setAttribute('aria-expanded', String(open));\n      nav.setAttribute('aria-hidden', String(!open));\n      document.body.classList.toggle('no-scroll', open);\n    }\n\n    btn.addEventListener('click', () => setOpen(!nav.classList.contains('is-open')));\n\n    // Cerrar al hacer click en un link (solo móvil)\n    nav.querySelectorAll('a.nav__link').forEach(a => {\n      a.addEventListener('click', () => { if (!media.matches) setOpen(false); });\n    });\n\n    // Dropdowns\n    nav.querySelectorAll('.nav__dropdown > .nav__btn').forEach(b => {\n      b.addEventListener('click', (e) => {\n        const dd = e.currentTarget.closest('.nav__dropdown');\n        const open = dd.getAttribute('aria-expanded') === 'true';\n        // cerrar hermanos\n        dd.parentElement.querySelectorAll('.nav__dropdown').forEach(x => x.setAttribute('aria-expanded','false'));\n        dd.setAttribute('aria-expanded', String(!open));\n      });\n    });\n\n    // Cerrar con ESC\n    document.addEventListener('keydown', (e) => { if (e.key === 'Escape') setOpen(false); });\n\n    // Si vuelves a desktop, resetea estado\n    media.addEventListener('change', () => { if (media.matches) setOpen(false); });\n\n})();\n"]}